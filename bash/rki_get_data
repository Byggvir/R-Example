#!/bin/bash

URL="https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Daten/Fallzahlen_Kum_Tab.xlsx?__blob=publicationFile"
TEMP=$(mktemp -d)
#TEMP="/tmp/rki" ; [ ! -d  "${TEMP}" ] && mkdir "${TEMP}"
DEST="$TEMP/rki.xlsx"
TDEST="$TEMP/testungen.xlsx"
CSV="$TEMP/rki"
TCSV="$TEMP/testungen"
SQL="$TEMP/rki.sql"
GIT="$HOME/git/R-Example/"

curl --output "$DEST" --url "$URL"

ssconvert  -S --export-type=Gnumeric_stf:stf_csv "$DEST" "${CSV}%n.csv"

TURL="https://www.rki.de/DE/Content/InfAZ/N/Neuartiges_Coronavirus/Daten/Testzahlen-gesamt.xlsx?__blob=publicationFile"
curl --output "$TDEST" --url "$TURL"

ssconvert  -S --export-type=Gnumeric_stf:stf_csv "$TDEST" "${TCSV}%n.csv"


function bund  {

# Importieren der bundesweiten Zahlen aus der kumulativen Tabelle.


#---
# Create SQL import file 
# 1. Delete header rows
# 2. Replace invalid dates
# 3. Reformat dates
# 4. Create SQL statements
#---
if [ $(date "+%w") -lt 6 ]
then

( cat <<EOF1
USE COVID19;
DROP TABLE IF EXISTS neu;

CREATE TABLE neu (date DATE primary key, cases INT, deaths INT);

SET autocommit=0;
# LOCK TABLE neu WRITE;

INSERT INTO neu VALUES ("2020-02-23",0,0);
EOF1

sed '1d; /^"/ s#^"25.08,2020",#2020-08-25,#; s#^\([0-9]\{2\}\).\([0-9]\{2\}\)\.\(202[0-9]\)#\3-\2-\1#; s#^\(202[0-9]\)/\([0-9]\{2\}\)/\([0-9]\{2\}\)#\1-\2-\3#;' "${CSV}1.csv" \
| sed 's#"[^"]*",##; s#,,#,0,#g; s#,,#,#g'   \
| awk -F ',' 'BEGIN {i=1}; {if ($2>0) print("INSERT INTO neu VALUES (ADDDATE(\"2020-02-23\"," i ")," $2 "," $5 ");" );i=i+1}'

cat <<EOF2
COMMIT;
UNLOCK TABLES;

CREATE TABLE IF NOT EXISTS rki (date DATE primary key, cases INT, deaths INT);

INSERT INTO rki 
SELECT neu.* 
FROM neu 
LEFT JOIN rki 
ON rki.date = neu.date
WHERE rki.date IS NULL;

COMMIT;
UNLOCK TABLES;

SELECT * FROM rki 
WHERE date > subdate(now(),10) ;
EOF2

) > "$SQL"

sudo rm /tmp/RKI_nach_{Tag,Kw}.csv 2>/dev/null

mysql --user=rscript --password=rscript < "$SQL"
mysql --user=rscript --password=rscript < "$HOME/git/R-Example/SQL/RKI_Export.sql"

sudo mv /tmp/RKI_nach* "$GIT/data/"
fi

} # Ende Bund

function bundeslaender {

# Importieren der Länderzahlen aus der kumulativen Tabelle.

(
cat <<EOF3
USE COVID19 ;
DROP TABLE IF EXISTS rkibland;

CREATE TABLE rkibland (blid INT, name CHAR(32), INDEX (blid , name));
SET autocommit=0;
LOCK TABLE rkibland WRITE;
EOF3

cat "${TEMP}/rki2.csv" \
| sed '1d;$d; s#,.*##;' \
| awk -F ',' 'BEGIN {i=1;} { print ("INSERT INTO rkibland VALUES (" i ",\"" $1 "\");"); i=i+1}'

cat <<EOF4
COMMIT;
UNLOCK TABLES;
EOF4

cat <<EOF5
USE COVID19;
DROP TABLE IF EXISTS rkiblcases;

CREATE TABLE rkiblcases ( blid INT , reported DATE, cases INT, INDEX (blid, reported));

SET autocommit=0;
LOCK TABLE rkiblcases WRITE;
EOF5

cat "${TEMP}/rki2.csv" \
| sed '1d;$d; s#,*$##; s#^[^,]*,#-\n#; s#,#\n#g;' \
| awk -F ',' 'BEGIN {i=-1;j=0;} { if ($1=="-") { i=0; j=j+1; v=0} else { v=$1 };print("INSERT INTO rkiblcases VALUES (" j ", ADDDATE(\"2020-05-06\"," i ")," v ");") ; i=i+1; }'

cat <<EOF6
COMMIT;
UNLOCK TABLES;
EOF6
) > "$SQL"

mysql --user=rscript --password=rscript < "$SQL"

}

function testungen {

(
cat <<TESTEOF1
USE COVID19 ;
DROP TABLE IF EXISTS Testungen;

CREATE TABLE Testungen (Kw INT, Testungen INT, Positiv INT, PRIMARY KEY (Kw));
TESTEOF1

cat "${TEMP}/testungen1.csv" \
| sed '1d;$d; /Bis/ s#"Bis einschließlich KW10"#10#; s#,".*##' \
| sed 's#^#INSERT INTO Testungen VALUES (#; s#$#);#'

cat <<TESTEOF2
COMMIT;
UNLOCK TABLES;
TESTEOF2
) > "$SQL"

mysql --user=rscript --password=rscript < "$SQL"

}

function rki_dashboard {

# Importieren der Zahlen aus der Tabelle für das RKI Dashboard

URL="https://www.arcgis.com/sharing/rest/content/items/f10774f1c63e40168479a1feb6c7ca74/data"
DEST="$TEMP/RKI-COVID19.csv"
DESTA="$TEMP/A-RKI-COVID19.csv"

DEBUG=OFF

[ "$DEBUG" = "ON" ] && [ ! -e $DEST ] && curl --output "$DESTA" --url "$URL"

( ( [ "$DEBUG" = "ON" ] && cat "$DESTA" ) || curl --url "$URL" ) \
| sed 's#"\([0-9]\{2\}\)\.\([0-9]\{2\}\)\.\([0-9]\{4\}\).*"#\3-\2-\1#g; s# 00:00:00##g; s#/#-#g; s#,[^,]*$##' \
| sed 's#LK Göttingen (alt)#LK Göttingen#' \
> "$DEST"

( cat <<EOF
USE COVID19;

DROP TABLE IF EXISTS RKIFaelle;

CREATE TABLE IF NOT EXISTS RKIFaelle (
    ObjectId INT
    , IdBundesland INT
    , Bundesland CHAR(32)
    , Landkreis CHAR(64)
    , Altersgruppe CHAR(7)
    , Geschlecht CHAR(1)
    , AnzahlFall INT
    , AnzahlTodesfall INT
    , Meldedatum DATE
    , IdLandkreis INT
    , Datenbestand DATE
    , NeuerFall INT 
    , NeuerTodesfall INT 
    , Refdatum DATE
    , NeuGenesen INT
    , AnzahlGenesen INT 
    , IstErkrankungsbeginn INT
    , PRIMARY KEY(ObjectId, Datenbestand));
    
ALTER TABLE RKIFaelle ADD INDEX(IdBundesland);
ALTER TABLE RKIFaelle ADD INDEX(IdLandkreis);
ALTER TABLE RKIFaelle ADD INDEX(Meldedatum);
ALTER TABLE RKIFaelle ADD INDEX(RefDatum);
ALTER TABLE RKIFaelle ADD INDEX(Geschlecht);
ALTER TABLE RKIFaelle ADD INDEX(Altersgruppe);

LOAD DATA LOCAL INFILE '$DEST' 
    INTO TABLE RKIFaelle 
    FIELDS TERMINATED BY ',' 
    IGNORE 1 ROWS;
    
DROP TABLE IF EXISTS Bundesland;

CREATE TABLE Bundesland ( 
    IdBundesland INT PRIMARY KEY
    , Bundesland CHAR(32)
    , INDEX (Bundesland));
    
DROP TABLE IF EXISTS Landkreis;

CREATE TABLE Landkreis ( 
    IdLandkreis INT PRIMARY KEY
    , Landkreis CHAR(64)
    , INDEX (Landkreis));
    
INSERT INTO Bundesland
SELECT DISTINCT IdBundesland, Bundesland
FROM RKIFaelle;
    
INSERT INTO Landkreis
SELECT DISTINCT IdLandkreis, Landkreis
FROM RKIFaelle;

ALTER TABLE RKIFaelle DROP COLUMN Bundesland;
ALTER TABLE RKIFaelle DROP COLUMN Landkreis;

SELECT max(Meldedatum), max(Datenbestand) FROM RKIFaelle;  

EOF
) | mysql --user=rscript --password=rscript

}

function run_r {
pushd $HOME/git/R-Example/

sudo mv /tmp/RKI_nach_{Tag,Kw}.csv data/

    pushd RKI
    for r in *.r
    do
        echo -e "--- $r ---"
        Rscript $r
     done
    popd
popd
}

bund
bundeslaender
rki_dashboard
testungen
run_r
